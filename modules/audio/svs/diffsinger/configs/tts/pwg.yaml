base_config: configs/tts/base.yaml
task_cls: tasks.vocoder.pwg.PwgTask

binarization_args:
  with_wav: true
  with_spk_embed: false
  with_align: false
test_input_dir: ''

###########
# train and eval
###########
max_samples: 25600
max_sentences: 5
max_eval_sentences: 1
max_updates: 1000000
val_check_interval: 2000


###########################################################
#                FEATURE EXTRACTION SETTING               #
###########################################################
sampling_rate: 22050     # Sampling rate.
fft_size: 1024           # FFT size.
hop_size: 256            # Hop size.
win_length: null         # Window length.
# If set to null, it will be the same as fft_size.
window: "hann"           # Window function.
num_mels: 80             # Number of mel basis.
fmin: 80                 # Minimum freq in mel basis calculation.
fmax: 7600               # Maximum frequency in mel basis calculation.
format: "hdf5"           # Feature file format. "npy" or "hdf5" is supported.

###########################################################
#         GENERATOR NETWORK ARCHITECTURE SETTING          #
###########################################################
generator_params:
  in_channels: 1        # Number of input channels.
  out_channels: 1       # Number of output channels.
  kernel_size: 3        # Kernel size of dilated convolution.
  layers: 30            # Number of residual block layers.
  stacks: 3             # Number of stacks i.e., dilation cycles.
  residual_channels: 64 # Number of channels in residual conv.
  gate_channels: 128    # Number of channels in gated conv.
  skip_channels: 64     # Number of channels in skip conv.
  aux_channels: 80      # Number of channels for auxiliary feature conv.
  # Must be the same as num_mels.
  aux_context_window: 2 # Context window size for auxiliary feature.
  # If set to 2, previous 2 and future 2 frames will be considered.
  dropout: 0.0          # Dropout rate. 0.0 means no dropout applied.
  use_weight_norm: true # Whether to use weight norm.
  # If set to true, it will be applied to all of the conv layers.
  upsample_net: "ConvInUpsampleNetwork" # Upsampling network architecture.
  upsample_params:                      # Upsampling network parameters.
    upsample_scales: [4, 4, 4, 4]     # Upsampling scales. Prodcut of these must be the same as hop size.
  use_pitch_embed: false

###########################################################
#       DISCRIMINATOR NETWORK ARCHITECTURE SETTING        #
###########################################################
discriminator_params:
  in_channels: 1        # Number of input channels.
  out_channels: 1       # Number of output channels.
  kernel_size: 3        # Number of output channels.
  layers: 10            # Number of conv layers.
  conv_channels: 64     # Number of chnn layers.
  bias: true            # Whether to use bias parameter in conv.
  use_weight_norm: true # Whether to use weight norm.
  # If set to true, it will be applied to all of the conv layers.
  nonlinear_activation: "LeakyReLU" # Nonlinear function after each conv.
  nonlinear_activation_params:      # Nonlinear function parameters
    negative_slope: 0.2           # Alpha in LeakyReLU.

###########################################################
#                   STFT LOSS SETTING                     #
###########################################################
stft_loss_params:
  fft_sizes: [1024, 2048, 512]  # List of FFT size for STFT-based loss.
  hop_sizes: [120, 240, 50]     # List of hop size for STFT-based loss
  win_lengths: [600, 1200, 240] # List of window length for STFT-based loss.
  window: "hann_window"         # Window function for STFT-based loss
use_mel_loss: false

###########################################################
#               ADVERSARIAL LOSS SETTING                  #
###########################################################
lambda_adv: 4.0  # Loss balancing coefficient.

###########################################################
#             OPTIMIZER & SCHEDULER SETTING               #
###########################################################
generator_optimizer_params:
  lr: 0.0001             # Generator's learning rate.
  eps: 1.0e-6            # Generator's epsilon.
  weight_decay: 0.0      # Generator's weight decay coefficient.
generator_scheduler_params:
  step_size: 200000      # Generator's scheduler step size.
  gamma: 0.5             # Generator's scheduler gamma.
  # At each step size, lr will be multiplied by this parameter.
generator_grad_norm: 10    # Generator's gradient norm.
discriminator_optimizer_params:
  lr: 0.00005            # Discriminator's learning rate.
  eps: 1.0e-6            # Discriminator's epsilon.
  weight_decay: 0.0      # Discriminator's weight decay coefficient.
discriminator_scheduler_params:
  step_size: 200000      # Discriminator's scheduler step size.
  gamma: 0.5             # Discriminator's scheduler gamma.
  # At each step size, lr will be multiplied by this parameter.
discriminator_grad_norm: 1 # Discriminator's gradient norm.
disc_start_steps: 40000 # Number of steps to start to train discriminator.
